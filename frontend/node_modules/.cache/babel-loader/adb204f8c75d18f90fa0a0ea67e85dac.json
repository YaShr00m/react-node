{"ast":null,"code":"var _jsxFileName = \"/app/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL;\nconst AuthContext = /*#__PURE__*/createContext();\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const login = async formData => {\n    try {\n      const response = await fetch({\n        API_URL\n      } + '/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('There was a problem with the fetch operation:', error);\n    }\n  };\n  const register = async formData => {\n    try {\n      const response = await axios.post({\n        API_URL\n      } + '/register', formData);\n      console.log('Регистрация прошла успешно:', response.data);\n      setIsAuthenticated(true);\n    } catch (error) {\n      console.error('Ошибка при регистрации:', error);\n    }\n  };\n  const logout = () => {\n    setIsAuthenticated(false);\n    // Возможно, удалить токен из localStorage\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      login,\n      logout,\n      register\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(AuthProvider, \"BT2f1XiqCgFHwobQTWR7kond0Ig=\");\n_c = AuthProvider;\nexport function useAuth() {\n  _s2();\n  return useContext(AuthContext);\n}\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","axios","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_API_URL","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","login","formData","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","error","console","register","post","log","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/app/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\nconst AuthContext = createContext();\r\n\r\nexport function AuthProvider({ children }) {\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n    const login = async (formData) => {\r\n        try {\r\n            const response = await fetch({API_URL} + '/login', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(formData)\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n\r\n            const data = await response.json();\r\n            return data;\r\n        } catch (error) {\r\n            console.error('There was a problem with the fetch operation:', error);\r\n        }\r\n    };\r\n\r\n    const register = async (formData) => {\r\n        try {\r\n            const response = await axios.post({API_URL} +'/register', formData);\r\n            console.log('Регистрация прошла успешно:', response.data);\r\n            setIsAuthenticated(true);\r\n        } catch (error) {\r\n            console.error('Ошибка при регистрации:', error);\r\n        }\r\n    };\r\n\r\n    const logout = () => {\r\n        setIsAuthenticated(false);\r\n        // Возможно, удалить токен из localStorage\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ isAuthenticated, login, logout, register }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n}\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext);\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAClE,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;AAC7C,MAAMC,WAAW,gBAAGV,aAAa,CAAC,CAAC;AAEnC,OAAO,SAASW,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACvC,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAMe,KAAK,GAAG,MAAOC,QAAQ,IAAK;IAC9B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC;QAACb;MAAO,CAAC,GAAG,QAAQ,EAAE;QAC/Cc,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ;MACjC,CAAC,CAAC;MAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAClD;MAEA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAClC,OAAOD,IAAI;IACf,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;IACzE;EACJ,CAAC;EAED,MAAME,QAAQ,GAAG,MAAOd,QAAQ,IAAK;IACjC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAAC6B,IAAI,CAAC;QAAC1B;MAAO,CAAC,GAAE,WAAW,EAAEW,QAAQ,CAAC;MACnEa,OAAO,CAACG,GAAG,CAAC,6BAA6B,EAAEf,QAAQ,CAACS,IAAI,CAAC;MACzDZ,kBAAkB,CAAC,IAAI,CAAC;IAC5B,CAAC,CAAC,OAAOc,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACnD;EACJ,CAAC;EAED,MAAMK,MAAM,GAAGA,CAAA,KAAM;IACjBnB,kBAAkB,CAAC,KAAK,CAAC;IACzB;EACJ,CAAC;EAED,oBACIV,OAAA,CAACK,WAAW,CAACyB,QAAQ;IAACC,KAAK,EAAE;MAAEtB,eAAe;MAAEE,KAAK;MAAEkB,MAAM;MAAEH;IAAS,CAAE;IAAAnB,QAAA,EACrEA;EAAQ;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B;AAAC3B,EAAA,CA5CeF,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AA8C5B,OAAO,SAAS+B,OAAOA,CAAA,EAAG;EAAAC,GAAA;EACtB,OAAOzC,UAAU,CAACQ,WAAW,CAAC;AAClC;AAACiC,GAAA,CAFeD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}