{"ast":null,"code":"var _jsxFileName = \"/app/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL;\nconst AuthContext = /*#__PURE__*/createContext();\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [userData, setUserData] = useState(null);\n  const login = async formData => {\n    с;\n    try {\n      const response = await fetch(`${API_URL}/login`, {\n        method: 'POST',\n        body: formData // Отправляем formData как тело запроса\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Произошла ошибка при входе');\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  };\n  const register = async formData => {\n    try {\n      const response = await fetch(`${API_URL}/register`, {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Произошла ошибка при регистрации');\n      }\n      const data = await response.json();\n      localStorage.setItem('authToken', data.token); // Сохранение токена в localStorage\n      localStorage.setItem('userData', JSON.stringify(data.user)); // Сохранение данных пользователя в localStorage\n      setIsAuthenticated(true);\n      setUserData(data.user);\n      return response;\n    } catch (error) {\n      console.error('Registration error:', error);\n      throw error;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('userData'); // Очистка данных пользователя из localStorage\n    setIsAuthenticated(false);\n    setUserData(null);\n  };\n  useEffect(() => {\n    const token = localStorage.getItem('authToken');\n    if (token) {\n      setIsAuthenticated(true);\n      const savedUserData = localStorage.getItem('userData');\n      if (savedUserData) {\n        setUserData(JSON.parse(savedUserData));\n      }\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      login,\n      register,\n      logout,\n      setIsAuthenticated,\n      userData\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n_s(AuthProvider, \"ShzTycAHSJKeOpUhpApIHPSR/QA=\");\n_c = AuthProvider;\nexport function useAuth() {\n  _s2();\n  return useContext(AuthContext);\n}\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_API_URL","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","userData","setUserData","login","formData","с","response","fetch","method","body","ok","errorData","json","Error","error","data","console","register","localStorage","setItem","token","JSON","stringify","user","logout","removeItem","getItem","savedUserData","parse","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/app/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport function AuthProvider({ children }) {\r\n\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n    const [userData, setUserData] = useState(null);\r\n\r\n    const login = async (formData) => {\r\n        с\r\n        try {\r\n            const response = await fetch(`${API_URL}/login`, {\r\n                method: 'POST',\r\n                body: formData, // Отправляем formData как тело запроса\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const errorData = await response.json();\r\n                throw new Error(errorData.error || 'Произошла ошибка при входе');\r\n            }\r\n\r\n            const data = await response.json();\r\n            return data;\r\n        } catch (error) {\r\n            console.error('Login error:', error);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n\r\n    const register = async (formData) => {\r\n        try {\r\n            const response = await fetch(`${API_URL}/register`, {\r\n                method: 'POST',\r\n                body: formData,\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const errorData = await response.json();\r\n                throw new Error(errorData.error || 'Произошла ошибка при регистрации');\r\n            }\r\n\r\n            const data = await response.json();\r\n            localStorage.setItem('authToken', data.token); // Сохранение токена в localStorage\r\n            localStorage.setItem('userData', JSON.stringify(data.user)); // Сохранение данных пользователя в localStorage\r\n            setIsAuthenticated(true);\r\n            setUserData(data.user);\r\n            return response;\r\n        } catch (error) {\r\n            console.error('Registration error:', error);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem('authToken');\r\n        localStorage.removeItem('userData'); // Очистка данных пользователя из localStorage\r\n        setIsAuthenticated(false);\r\n        setUserData(null);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('authToken');\r\n        if (token) {\r\n            setIsAuthenticated(true);\r\n            const savedUserData = localStorage.getItem('userData');\r\n            if (savedUserData) {\r\n                setUserData(JSON.parse(savedUserData));\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ isAuthenticated, login, register, logout, setIsAuthenticated, userData }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n}\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext);\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}